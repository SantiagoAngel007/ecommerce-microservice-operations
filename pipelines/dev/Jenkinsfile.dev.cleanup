pipeline {
    agent any
    
    environment {
        GITHUB_REPO_OPS = "https://github.com/SantiagoAngel007/ecommerce-microservice-operations.git"
        GITHUB_BRANCH_OPS = "main"
    }
    
    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'stage', 'prod'], description: 'Ambiente a limpiar')
    }
    
    stages {
        stage('1. Checkout - Operations') {
            steps {
                echo "üîÑ Clonando repositorio de operaciones..."
                dir('ops') {
                    checkout([$class: 'GitSCM', 
                        branches: [[name: "${GITHUB_BRANCH_OPS}"]], 
                        userRemoteConfigs: [[url: "${GITHUB_REPO_OPS}"]]
                    ])
                }
            }
        }
        
        stage('2. Delete Namespace') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh '''
                        export KUBECONFIG=${KUBECONFIG}
                        NAMESPACE=${ENVIRONMENT}
                        
                        echo "üóëÔ∏è  Eliminando namespace ${NAMESPACE}..."
                        kubectl delete namespace ${NAMESPACE} --ignore-not-found=true
                        
                        echo "‚úì Namespace ${NAMESPACE} eliminado"
                        sleep 10
                    '''
                }
            }
        }
        
        stage('3. Verify Cleanup') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh '''
                        export KUBECONFIG=${KUBECONFIG}
                        NAMESPACE=${ENVIRONMENT}
                        
                        echo "‚úÖ Verificando que el namespace fue eliminado:"
                        kubectl get namespace ${NAMESPACE} 2>&1 || echo "‚úì Namespace no existe (limpio)"
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo "‚úÖ Cleanup completado exitosamente"
        }
        failure {
            echo "‚ùå Cleanup fall√≥"
        }
    }
}